{"ast":null,"code":"var _jsxFileName = \"/home/owner/Projects/React-Projects/react-project/src/components/CustomTabs/CustomTabs.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // material-ui components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\"; // core components\n\nimport Card from \"../Card/Card.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\nimport styles from \"./../../assets/jss/material-dashboard-react/components/customTabsStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nexport default function CustomTabs(props) {\n  _s();\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, value) => {\n    setValue(value);\n  };\n\n  const classes = useStyles();\n  const {\n    headerColor,\n    plainTabs,\n    tabs,\n    title,\n    rtlActive\n  } = props;\n  const cardTitle = classNames({\n    [classes.cardTitle]: true,\n    [classes.cardTitleRTL]: rtlActive\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    plain: plainTabs,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      color: headerColor,\n      plain: plainTabs,\n      children: [title !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardTitle,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        classes: {\n          root: classes.tabsRoot,\n          indicator: classes.displayNone,\n          scrollButtons: classes.displayNone\n        },\n        variant: \"scrollable\",\n        scrollButtons: \"auto\",\n        children: tabs.map((prop, key) => {\n          var icon = {};\n\n          if (prop.tabIcon) {\n            icon = {\n              icon: /*#__PURE__*/_jsxDEV(prop.tabIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this)\n            };\n          }\n\n          if (prop.allowed) {\n            return /*#__PURE__*/_jsxDEV(Tab, {\n              classes: {\n                root: classes.tabRootButton,\n                selected: classes.tabSelected,\n                wrapper: classes.tabWrapper\n              },\n              label: prop.tabName,\n              ...icon\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: tabs.map((prop, key) => {\n        if (prop.allowed) {\n          if (key === value) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: prop.tabContent\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 22\n            }, this);\n          }\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomTabs, \"amYE+i0RSNXWcaZXPkaqPcPCmRg=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomTabs;\nCustomTabs.propTypes = {\n  headerColor: PropTypes.oneOf([\"warning\", \"success\", \"danger\", \"info\", \"primary\", \"rose\"]),\n  title: PropTypes.string,\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    tabName: PropTypes.string.isRequired,\n    tabIcon: PropTypes.object,\n    tabContent: PropTypes.node.isRequired\n  })),\n  rtlActive: PropTypes.bool,\n  plainTabs: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTabs\");","map":{"version":3,"sources":["/home/owner/Projects/React-Projects/react-project/src/components/CustomTabs/CustomTabs.js"],"names":["React","classNames","PropTypes","makeStyles","Tabs","Tab","Card","CardBody","CardHeader","styles","useStyles","CustomTabs","props","value","setValue","useState","handleChange","event","classes","headerColor","plainTabs","tabs","title","rtlActive","cardTitle","cardTitleRTL","undefined","root","tabsRoot","indicator","displayNone","scrollButtons","map","prop","key","icon","tabIcon","allowed","tabRootButton","selected","tabSelected","wrapper","tabWrapper","tabName","tabContent","propTypes","oneOf","string","arrayOf","shape","isRequired","object","node","bool"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,OAAOC,MAAP,MAAmB,2EAAnB;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACM,MAAD,CAA5B;AAEA,eAAe,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACe,QAAN,CAAe,CAAf,CAA1B;;AACA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQJ,KAAR,KAAkB;AACrCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMK,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM;AAAES,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA,KAAhC;AAAuCC,IAAAA;AAAvC,MAAqDX,KAA3D;AACA,QAAMY,SAAS,GAAGvB,UAAU,CAAC;AAC3B,KAACiB,OAAO,CAACM,SAAT,GAAqB,IADM;AAE3B,KAACN,OAAO,CAACO,YAAT,GAAwBF;AAFG,GAAD,CAA5B;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,SAAb;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAED,WAAnB;AAAgC,MAAA,KAAK,EAAEC,SAAvC;AAAA,iBACGE,KAAK,KAAKI,SAAV,gBAAsB;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA,kBAA4BF;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAtB,GAAiE,IADpE,eAEE,QAAC,IAAD;AACE,QAAA,KAAK,EAAET,KADT;AAEE,QAAA,QAAQ,EAAEG,YAFZ;AAGE,QAAA,OAAO,EAAE;AACPW,UAAAA,IAAI,EAAET,OAAO,CAACU,QADP;AAEPC,UAAAA,SAAS,EAAEX,OAAO,CAACY,WAFZ;AAGPC,UAAAA,aAAa,EAAEb,OAAO,CAACY;AAHhB,SAHX;AAQE,QAAA,OAAO,EAAC,YARV;AASE,QAAA,aAAa,EAAC,MAThB;AAAA,kBAWGT,IAAI,CAACW,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,KAAe;AACvB,cAAIC,IAAI,GAAG,EAAX;;AACA,cAAIF,IAAI,CAACG,OAAT,EAAkB;AAChBD,YAAAA,IAAI,GAAG;AACLA,cAAAA,IAAI,eAAE,QAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AADD,aAAP;AAGD;;AAED,cAAGF,IAAI,CAACI,OAAR,EAAiB;AACf,gCACE,QAAC,GAAD;AACE,cAAA,OAAO,EAAE;AACPV,gBAAAA,IAAI,EAAET,OAAO,CAACoB,aADP;AAEPC,gBAAAA,QAAQ,EAAErB,OAAO,CAACsB,WAFX;AAGPC,gBAAAA,OAAO,EAAEvB,OAAO,CAACwB;AAHV,eADX;AAOE,cAAA,KAAK,EAAET,IAAI,CAACU,OAPd;AAAA,iBAQMR;AARN,eAMOD,GANP;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAbD,MAaO;AACL,mBAAO,IAAP;AACD;AACF,SAxBA;AAXH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAyCE,QAAC,QAAD;AAAA,gBACGb,IAAI,CAACW,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,KAAe;AACvB,YAAGD,IAAI,CAACI,OAAR,EAAiB;AACf,cAAIH,GAAG,KAAKrB,KAAZ,EAAmB;AACjB,gCAAO;AAAA,wBAAgBoB,IAAI,CAACW;AAArB,eAAUV,GAAV;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD,OAPA;AADH;AAAA;AAAA;AAAA;AAAA,YAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD;;GAjEuBvB,U;UAKND,S;;;KALMC,U;AAmExBA,UAAU,CAACkC,SAAX,GAAuB;AACrB1B,EAAAA,WAAW,EAAEjB,SAAS,CAAC4C,KAAV,CAAgB,CAC3B,SAD2B,EAE3B,SAF2B,EAG3B,QAH2B,EAI3B,MAJ2B,EAK3B,SAL2B,EAM3B,MAN2B,CAAhB,CADQ;AASrBxB,EAAAA,KAAK,EAAEpB,SAAS,CAAC6C,MATI;AAUrB1B,EAAAA,IAAI,EAAEnB,SAAS,CAAC8C,OAAV,CACJ9C,SAAS,CAAC+C,KAAV,CAAgB;AACdN,IAAAA,OAAO,EAAEzC,SAAS,CAAC6C,MAAV,CAAiBG,UADZ;AAEdd,IAAAA,OAAO,EAAElC,SAAS,CAACiD,MAFL;AAGdP,IAAAA,UAAU,EAAE1C,SAAS,CAACkD,IAAV,CAAeF;AAHb,GAAhB,CADI,CAVe;AAiBrB3B,EAAAA,SAAS,EAAErB,SAAS,CAACmD,IAjBA;AAkBrBjC,EAAAA,SAAS,EAAElB,SAAS,CAACmD;AAlBA,CAAvB","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n// core components\nimport Card from \"../Card/Card.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\n\nimport styles from \"./../../assets/jss/material-dashboard-react/components/customTabsStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTabs(props) {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, value) => {\n    setValue(value);\n  };\n  const classes = useStyles();\n  const { headerColor, plainTabs, tabs, title, rtlActive } = props;\n  const cardTitle = classNames({\n    [classes.cardTitle]: true,\n    [classes.cardTitleRTL]: rtlActive\n  });\n  return (\n    <Card plain={plainTabs}>\n      <CardHeader color={headerColor} plain={plainTabs}>\n        {title !== undefined ? <div className={cardTitle}>{title}</div> : null}\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          classes={{\n            root: classes.tabsRoot,\n            indicator: classes.displayNone,\n            scrollButtons: classes.displayNone\n          }}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          {tabs.map((prop, key) => {\n            var icon = {};\n            if (prop.tabIcon) {\n              icon = {\n                icon: <prop.tabIcon />\n              };\n            }\n            \n            if(prop.allowed) {\n              return (\n                <Tab\n                  classes={{\n                    root: classes.tabRootButton,\n                    selected: classes.tabSelected,\n                    wrapper: classes.tabWrapper\n                  }}\n                  key={key}\n                  label={prop.tabName}\n                  {...icon}\n                />\n              );\n            } else {\n              return null;\n            }\n          })}\n        </Tabs>\n      </CardHeader>\n      <CardBody>\n        {tabs.map((prop, key) => {\n          if(prop.allowed) {\n            if (key === value) { \n              return <div key={key}>{prop.tabContent}</div>;\n            }\n          }\n          return null;\n        })}\n      </CardBody>\n    </Card>\n  );\n}\n\nCustomTabs.propTypes = {\n  headerColor: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  title: PropTypes.string,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      tabName: PropTypes.string.isRequired,\n      tabIcon: PropTypes.object,\n      tabContent: PropTypes.node.isRequired\n    })\n  ),\n  rtlActive: PropTypes.bool,\n  plainTabs: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}